// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String    @db.Text
  email         String
  emailVerified Boolean
  image         String?   @db.Text
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  subscription Subscription?

  files File[]
  usage Usage[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?  @db.Text
  userAgent String?  @db.Text
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @db.Text
  providerId            String    @db.Text
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?   @db.Text
  refreshToken          String?   @db.Text
  idToken               String?   @db.Text
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?   @db.Text
  password              String?   @db.Text
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String    @db.Text
  value      String    @db.Text
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Plan {
  id               String   @id @default(uuid())
  name             String // e.g. Free, Boost, Pro, Ultra
  storageLimitMB   Int // 100MB, 2048MB etc
  aiTokensPerMonth Int // e.g. 500, 2000, 10000
  priceCents       Int // in cents
  currency         String // "usd", "pkr"
  createdAt        DateTime @default(now())
  features         Json // for future flexibility

  subscriptions Subscription[]
}

model Subscription {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  planId    String
  plan      Plan     @relation(fields: [planId], references: [id])
  startedAt DateTime @default(now())
  expiresAt DateTime
  renewed   Boolean  @default(false)

  @@index([expiresAt])
}

model File {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  size      Int
  key       String
  type      String
  createdAt DateTime @default(now())

  @@index([userId])
}

model Usage {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type      String // e.g., "storage", "ai_tokens"
  value     Int // value used (e.g. 345MB, 200 tokens)
  createdAt DateTime @default(now())

  @@index([userId, type])
}
